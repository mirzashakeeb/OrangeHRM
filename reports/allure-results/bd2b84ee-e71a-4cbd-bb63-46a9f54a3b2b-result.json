{"name": "test_edit_existing_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x01336643]\n\t(No symbol) [0x012CBE21]\n\t(No symbol) [0x011CDA9D]\n\t(No symbol) [0x01201342]\n\t(No symbol) [0x0120147B]\n\t(No symbol) [0x01238DC2]\n\t(No symbol) [0x0121FDC4]\n\t(No symbol) [0x01236B09]\n\t(No symbol) [0x0121FB76]\n\t(No symbol) [0x011F49C1]\n\t(No symbol) [0x011F5E5D]\n\tGetHandleVerifier [0x015AA142+2497106]\n\tGetHandleVerifier [0x015D85D3+2686691]\n\tGetHandleVerifier [0x015DBB9C+2700460]\n\tGetHandleVerifier [0x013E3B10+635936]\n\t(No symbol) [0x012D4A1F]\n\t(No symbol) [0x012DA418]\n\t(No symbol) [0x012DA505]\n\t(No symbol) [0x012E508B]\n\tBaseThreadInitThunk [0x767B6A24+36]\n\tRtlInitializeExceptionChain [0x778FA9FF+143]\n\tRtlInitializeExceptionChain [0x778FA9CA+90]", "trace": "self = <tests.test_admin_page.TestAdminPage object at 0x000000D414528F50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5ff8dc077ab8805d7e166ec7c30d2b96\")>\n\n    @allure.story(\"Edit existing user\")\n    def test_edit_existing_user(self, driver):\n        login_page = LoginPage(driver)\n        dashboard_page = DashboardPage(driver)\n        admin_page = AdminPage(driver)\n    \n        # Login\n        login_page.open_login_page()\n        login_page.login(\"Admin\", \"admin123\")\n        assert dashboard_page.is_dashboard_loaded(), \"Dashboard did not load\"\n    \n        # Open Admin tab\n        admin_page.open_admin_tab()\n    \n        # Search for the existing user\n        existing_username = \"mirza\"\n>       admin_page.search_user(\n            username=existing_username,\n            role=\"Admin\",\n            status=\"Enabled\"\n        )\n\ntests\\test_admin_page.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\admin_page.py:117: in search_user\n    WebDriverWait(self.driver, self.timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5ff8dc077ab8805d7e166ec7c30d2b96\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000000D41453CEA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x01336643]\nE       \t(No symbol) [0x012CBE21]\nE       \t(No symbol) [0x011CDA9D]\nE       \t(No symbol) [0x01201342]\nE       \t(No symbol) [0x0120147B]\nE       \t(No symbol) [0x01238DC2]\nE       \t(No symbol) [0x0121FDC4]\nE       \t(No symbol) [0x01236B09]\nE       \t(No symbol) [0x0121FB76]\nE       \t(No symbol) [0x011F49C1]\nE       \t(No symbol) [0x011F5E5D]\nE       \tGetHandleVerifier [0x015AA142+2497106]\nE       \tGetHandleVerifier [0x015D85D3+2686691]\nE       \tGetHandleVerifier [0x015DBB9C+2700460]\nE       \tGetHandleVerifier [0x013E3B10+635936]\nE       \t(No symbol) [0x012D4A1F]\nE       \t(No symbol) [0x012DA418]\nE       \t(No symbol) [0x012DA505]\nE       \t(No symbol) [0x012E508B]\nE       \tBaseThreadInitThunk [0x767B6A24+36]\nE       \tRtlInitializeExceptionChain [0x778FA9FF+143]\nE       \tRtlInitializeExceptionChain [0x778FA9CA+90]\n\nC:\\Users\\MIRZAS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "steps": [{"name": "Open OrangeHRM login page", "status": "passed", "steps": [{"name": "Open URL: 'https://opensource-demo.orangehrmlive.com/'", "status": "passed", "parameters": [{"name": "url", "value": "'https://opensource-demo.orangehrmlive.com/'"}], "start": 1758693569356, "stop": 1758693601563}], "start": 1758693569355, "stop": 1758693601564}, {"name": "Login with username: 'Admin' and password: 'admin123'", "status": "passed", "steps": [{"name": "Type ''Admin'' into element: ('name', 'username')", "status": "passed", "steps": [{"name": "Find element: ('name', 'username')", "status": "passed", "parameters": [{"name": "locator", "value": "('name', 'username')"}], "start": 1758693601565, "stop": 1758693609463}], "parameters": [{"name": "locator", "value": "('name', 'username')"}, {"name": "text", "value": "'Admin'"}], "start": 1758693601565, "stop": 1758693609762}, {"name": "Type ''admin123'' into element: ('name', 'password')", "status": "passed", "steps": [{"name": "Find element: ('name', 'password')", "status": "passed", "parameters": [{"name": "locator", "value": "('name', 'password')"}], "start": 1758693609762, "stop": 1758693609832}], "parameters": [{"name": "locator", "value": "('name', 'password')"}, {"name": "text", "value": "'admin123'"}], "start": 1758693609762, "stop": 1758693610169}, {"name": "Click element: ('xpath', \"//button[@type='submit']\")", "status": "passed", "steps": [{"name": "Find element: ('xpath', \"//button[@type='submit']\")", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[@type='submit']\")"}], "start": 1758693610170, "stop": 1758693610241}], "parameters": [{"name": "locator", "value": "('xpath', \"//button[@type='submit']\")"}], "start": 1758693610170, "stop": 1758693612573}], "attachments": [{"name": "dashboard_loaded", "source": "36384c30-6a0b-4a05-8ced-a56663db7f45-attachment.png", "type": "image/png"}], "parameters": [{"name": "user", "value": "'Admin'"}, {"name": "pwd", "value": "'admin123'"}], "start": 1758693601564, "stop": 1758693614222}, {"name": "Validate Dashboard is loaded", "status": "passed", "attachments": [{"name": "dashboard_loaded", "source": "03da548a-76c3-4b2d-b959-651926402438-attachment.png", "type": "image/png"}], "start": 1758693614223, "stop": 1758693615399}, {"name": "Open Admin Tab", "status": "passed", "start": 1758693615399, "stop": 1758693618066}, {"name": "Search user: 'mirza'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x01336643]\n\t(No symbol) [0x012CBE21]\n\t(No symbol) [0x011CDA9D]\n\t(No symbol) [0x01201342]\n\t(No symbol) [0x0120147B]\n\t(No symbol) [0x01238DC2]\n\t(No symbol) [0x0121FDC4]\n\t(No symbol) [0x01236B09]\n\t(No symbol) [0x0121FB76]\n\t(No symbol) [0x011F49C1]\n\t(No symbol) [0x011F5E5D]\n\tGetHandleVerifier [0x015AA142+2497106]\n\tGetHandleVerifier [0x015D85D3+2686691]\n\tGetHandleVerifier [0x015DBB9C+2700460]\n\tGetHandleVerifier [0x013E3B10+635936]\n\t(No symbol) [0x012D4A1F]\n\t(No symbol) [0x012DA418]\n\t(No symbol) [0x012DA505]\n\t(No symbol) [0x012E508B]\n\tBaseThreadInitThunk [0x767B6A24+36]\n\tRtlInitializeExceptionChain [0x778FA9FF+143]\n\tRtlInitializeExceptionChain [0x778FA9CA+90]\n\n", "trace": "  File \"C:\\Users\\MIRZAS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\MIRZA\\Users\\MIRZAS\\selenium_parallel_project\\pages\\admin_page.py\", line 117, in search_user\n    WebDriverWait(self.driver, self.timeout).until(\n  File \"C:\\Users\\MIRZAS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "username", "value": "'mirza'"}, {"name": "role", "value": "'Admin'"}, {"name": "emp_name", "value": "''"}, {"name": "status", "value": "'Enabled'"}], "start": 1758693618067, "stop": 1758693628578}], "attachments": [{"name": "test_edit_existing_user_failure", "source": "4a26ebf2-80a0-41e8-b4dd-68aba9c2c4f8-attachment.png", "type": "image/png"}, {"name": "test_edit_existing_user_logs", "source": "380bbfbd-cae4-4d6a-97f2-13167de5b2dc-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "f0122ba4-4668-4be9-87e5-262d0d30db25-attachment.txt", "type": "text/plain"}], "start": 1758693569354, "stop": 1758693628578, "uuid": "3d2261c7-1803-48cd-bef3-39f0645fa988", "historyId": "1d674764760d1b71ecae5f2d9998f66b", "testCaseId": "1d674764760d1b71ecae5f2d9998f66b", "fullName": "tests.test_admin_page.TestAdminPage#test_edit_existing_user", "labels": [{"name": "feature", "value": "User Management"}, {"name": "epic", "value": "Admin Module"}, {"name": "story", "value": "Edit existing user"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_admin_page"}, {"name": "subSuite", "value": "TestAdminPage"}, {"name": "host", "value": "MIRZA"}, {"name": "thread", "value": "3648-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_admin_page"}], "titlePath": ["tests", "test_admin_page.py", "TestAdminPage"]}